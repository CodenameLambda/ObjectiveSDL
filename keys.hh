#include "SDL.h"


namespace SDL {
    namespace events {
        enum class ScanKey {
            num_0 = SDL_SCANCODE_0,
            num_1 = SDL_SCANCODE_1,
            num_2 = SDL_SCANCODE_2,
            num_3 = SDL_SCANCODE_3,
            num_4 = SDL_SCANCODE_4,
            num_5 = SDL_SCANCODE_5,
            num_6 = SDL_SCANCODE_6,
            num_7 = SDL_SCANCODE_7,
            num_8 = SDL_SCANCODE_8,
            num_9 = SDL_SCANCODE_9,
            a = SDL_SCANCODE_A,
            ac_back = SDL_SCANCODE_AC_BACK,
            ac_bookmarks = SDL_SCANCODE_AC_BOOKMARKS,
            ac_forward = SDL_SCANCODE_AC_FORWARD,
            ac_home = SDL_SCANCODE_AC_HOME,
            ac_refresh = SDL_SCANCODE_AC_REFRESH,
            ac_search = SDL_SCANCODE_AC_SEARCH,
            ac_stop = SDL_SCANCODE_AC_STOP,
            again = SDL_SCANCODE_AGAIN,
            alt_erase = SDL_SCANCODE_ALTERASE,
            apostrophe = SDL_SCANCODE_APOSTROPHE,
            application = SDL_SCANCODE_APPLICATION,
            audio_mute = SDL_SCANCODE_AUDIOMUTE,
            audio_next = SDL_SCANCODE_AUDIONEXT,
            audio_play = SDL_SCANCODE_AUDIOPLAY,
            audio_prev = SDL_SCANCODE_AUDIOPREV,
            audio_stop = SDL_SCANCODE_AUDIOSTOP,
            b = SDL_SCANCODE_B,
            backslash = SDL_SCANCODE_BACKSLASH,
            backspace = SDL_SCANCODE_BACKSPACE,
            brightness_down = SDL_SCANCODE_BRIGHTNESSDOWN,
            brightness_up = SDL_SCANCODE_BRIGHTNESSUP,
            c = SDL_SCANCODE_C,
            calculator = SDL_SCANCODE_CALCULATOR,
            cancel = SDL_SCANCODE_CANCEL,
            caps_lock = SDL_SCANCODE_CAPSLOCK,
            clear = SDL_SCANCODE_CLEAR,
            clear_again = SDL_SCANCODE_CLEARAGAIN,
            comma = SDL_SCANCODE_COMMA,
            computer = SDL_SCANCODE_COMPUTER,
            copy = SDL_SCANCODE_COPY,
            cr_sel = SDL_SCANCODE_CRSEL,
            currency_subunit = SDL_SCANCODE_CURRENCYSUBUNIT,
            currency_unit = SDL_SCANCODE_CURRENCYUNIT,
            cut = SDL_SCANCODE_CUT,
            d = SDL_SCANCODE_D,
            decimal_separator = SDL_SCANCODE_DECIMALSEPARATOR,
            delete_key = SDL_SCANCODE_DELETE,
            display_switch = SDL_SCANCODE_DISPLAYSWITCH,
            down = SDL_SCANCODE_DOWN,
            e = SDL_SCANCODE_E,
            eject = SDL_SCANCODE_EJECT,
            end = SDL_SCANCODE_END,
            equals = SDL_SCANCODE_EQUALS,
            escape = SDL_SCANCODE_ESCAPE,
            execute = SDL_SCANCODE_EXECUTE,
            ex_sel = SDL_SCANCODE_EXSEL,
            f = SDL_SCANCODE_F,
            f1 = SDL_SCANCODE_F1,
            f10 = SDL_SCANCODE_F10,
            f11 = SDL_SCANCODE_F11,
            f12 = SDL_SCANCODE_F12,
            f13 = SDL_SCANCODE_F13,
            f14 = SDL_SCANCODE_F14,
            f15 = SDL_SCANCODE_F15,
            f16 = SDL_SCANCODE_F16,
            f17 = SDL_SCANCODE_F17,
            f18 = SDL_SCANCODE_F18,
            f19 = SDL_SCANCODE_F19,
            f2 = SDL_SCANCODE_F2,
            f20 = SDL_SCANCODE_F20,
            f21 = SDL_SCANCODE_F21,
            f22 = SDL_SCANCODE_F22,
            f23 = SDL_SCANCODE_F23,
            f24 = SDL_SCANCODE_F24,
            f3 = SDL_SCANCODE_F3,
            f4 = SDL_SCANCODE_F4,
            f5 = SDL_SCANCODE_F5,
            f6 = SDL_SCANCODE_F6,
            f7 = SDL_SCANCODE_F7,
            f8 = SDL_SCANCODE_F8,
            f9 = SDL_SCANCODE_F9,
            find = SDL_SCANCODE_FIND,
            g = SDL_SCANCODE_G,
            grave = SDL_SCANCODE_GRAVE,
            h = SDL_SCANCODE_H,
            help = SDL_SCANCODE_HELP,
            home = SDL_SCANCODE_HOME,
            i = SDL_SCANCODE_I,
            insert = SDL_SCANCODE_INSERT,
            j = SDL_SCANCODE_J,
            k = SDL_SCANCODE_K,
            kbd_illumination_down = SDL_SCANCODE_KBDILLUMDOWN,
            kbd_illumination_toggle = SDL_SCANCODE_KBDILLUMTOGGLE,
            kbd_illumination_up = SDL_SCANCODE_KBDILLUMUP,
            keypad_0 = SDL_SCANCODE_KP_0,
            keypad_00 = SDL_SCANCODE_KP_00,
            keypad_000 = SDL_SCANCODE_KP_000,
            keypad_1 = SDL_SCANCODE_KP_1,
            keypad_2 = SDL_SCANCODE_KP_2,
            keypad_3 = SDL_SCANCODE_KP_3,
            keypad_4 = SDL_SCANCODE_KP_4,
            keypad_5 = SDL_SCANCODE_KP_5,
            keypad_6 = SDL_SCANCODE_KP_6,
            keypad_7 = SDL_SCANCODE_KP_7,
            keypad_8 = SDL_SCANCODE_KP_8,
            keypad_9 = SDL_SCANCODE_KP_9,
            keypad_a = SDL_SCANCODE_KP_A,
            keypad_ampersand = SDL_SCANCODE_KP_AMPERSAND,
            keypad_at = SDL_SCANCODE_KP_AT,
            keypad_b = SDL_SCANCODE_KP_B,
            keypad_backspace = SDL_SCANCODE_KP_BACKSPACE,
            keypad_binary = SDL_SCANCODE_KP_BINARY,
            keypad_c = SDL_SCANCODE_KP_C,
            keypad_clear = SDL_SCANCODE_KP_CLEAR,
            keypad_clear_entry = SDL_SCANCODE_KP_CLEARENTRY,
            keypad_colon = SDL_SCANCODE_KP_COLON,
            keypad_comma = SDL_SCANCODE_KP_COMMA,
            keypad_d = SDL_SCANCODE_KP_D,
            keypad_double_ampersand = SDL_SCANCODE_KP_DBLAMPERSAND,
            keypad_double_vertical_bar = SDL_SCANCODE_KP_DBLVERTICALBAR,
            keypad_decimal = SDL_SCANCODE_KP_DECIMAL,
            keypad_divide = SDL_SCANCODE_KP_DIVIDE,
            keypad_e = SDL_SCANCODE_KP_E,
            keypad_enter = SDL_SCANCODE_KP_ENTER,
            keypad_equals = SDL_SCANCODE_KP_EQUALS,
            keypad_equals_as400 = SDL_SCANCODE_KP_EQUALSAS400,
            keypad_exclaimation_mark = SDL_SCANCODE_KP_EXCLAM,
            keypad_f = SDL_SCANCODE_KP_F,
            keypad_greater_than = SDL_SCANCODE_KP_GREATER,
            keypad_hash = SDL_SCANCODE_KP_HASH,
            keypad_hexadecimal = SDL_SCANCODE_KP_HEXADECIMAL,
            keypad_left_brace = SDL_SCANCODE_KP_LEFTBRACE,
            keypad_left_parenthesis = SDL_SCANCODE_KP_LEFTPAREN,
            keypad_lower_than = SDL_SCANCODE_KP_LESS,
            keypad_mem_add = SDL_SCANCODE_KP_MEMADD,
            keypad_mem_clear = SDL_SCANCODE_KP_MEMCLEAR,
            keypad_mem_divide = SDL_SCANCODE_KP_MEMDIVIDE,
            keypad_mem_multiply = SDL_SCANCODE_KP_MEMMULTIPLY,
            keypad_mem_recall = SDL_SCANCODE_KP_MEMRECALL,
            keypad_mem_store = SDL_SCANCODE_KP_MEMSTORE,
            keypad_mem_subtract = SDL_SCANCODE_KP_MEMSUBTRACT,
            keypad_minus = SDL_SCANCODE_KP_MINUS,
            keypad_multiply = SDL_SCANCODE_KP_MULTIPLY,
            keypad_octal = SDL_SCANCODE_KP_OCTAL,
            keypad_percent = SDL_SCANCODE_KP_PERCENT,
            keypad_period = SDL_SCANCODE_KP_PERIOD,
            keypad_plus = SDL_SCANCODE_KP_PLUS,
            keypad_plus_minus = SDL_SCANCODE_KP_PLUSMINUS,
            keypad_power = SDL_SCANCODE_KP_POWER,
            keypad_right_brace = SDL_SCANCODE_KP_RIGHTBRACE,
            keypad_right_parenthesis = SDL_SCANCODE_KP_RIGHTPAREN,
            keypad_space = SDL_SCANCODE_KP_SPACE,
            keypad_tab = SDL_SCANCODE_KP_TAB,
            keypad_vertical_bar = SDL_SCANCODE_KP_VERTICALBAR,
            keypad_xor = SDL_SCANCODE_KP_XOR,
            l = SDL_SCANCODE_L,
            left_alt = SDL_SCANCODE_LALT,
            left_ctrl = SDL_SCANCODE_LCTRL,
            left = SDL_SCANCODE_LEFT,
            left_bracket = SDL_SCANCODE_LEFTBRACKET,
            left_super = SDL_SCANCODE_LGUI,
            left_shift = SDL_SCANCODE_LSHIFT,
            m = SDL_SCANCODE_M,
            mail = SDL_SCANCODE_MAIL,
            media_select = SDL_SCANCODE_MEDIASELECT,
            menu = SDL_SCANCODE_MENU,
            minus = SDL_SCANCODE_MINUS,
            mode_switch = SDL_SCANCODE_MODE,
            mute = SDL_SCANCODE_MUTE,
            n = SDL_SCANCODE_N,
            numlock = SDL_SCANCODE_NUMLOCKCLEAR,
            o = SDL_SCANCODE_O,
            oper = SDL_SCANCODE_OPER,
            out = SDL_SCANCODE_OUT,
            p = SDL_SCANCODE_P,
            page_down = SDL_SCANCODE_PAGEDOWN,
            page_up = SDL_SCANCODE_PAGEUP,
            paste = SDL_SCANCODE_PASTE,
            pause = SDL_SCANCODE_PAUSE,
            period = SDL_SCANCODE_PERIOD,
            power = SDL_SCANCODE_POWER,
            print_screen = SDL_SCANCODE_PRINTSCREEN,
            prior = SDL_SCANCODE_PRIOR,
            q = SDL_SCANCODE_Q,
            r = SDL_SCANCODE_R,
            right_alt = SDL_SCANCODE_RALT,
            right_ctrl = SDL_SCANCODE_RCTRL,
            return_enter = SDL_SCANCODE_RETURN,
            return_alternative = SDL_SCANCODE_RETURN2,
            right_super = SDL_SCANCODE_RGUI,
            right = SDL_SCANCODE_RIGHT,
            right_bracket = SDL_SCANCODE_RIGHTBRACKET,
            right_shift = SDL_SCANCODE_RSHIFT,
            s = SDL_SCANCODE_S,
            scroll_lock = SDL_SCANCODE_SCROLLLOCK,
            select = SDL_SCANCODE_SELECT,
            semicolon = SDL_SCANCODE_SEMICOLON,
            separator = SDL_SCANCODE_SEPARATOR,
            slash = SDL_SCANCODE_SLASH,
            sleep = SDL_SCANCODE_SLEEP,
            space = SDL_SCANCODE_SPACE,
            stop = SDL_SCANCODE_STOP,
            sys_req = SDL_SCANCODE_SYSREQ,
            t = SDL_SCANCODE_T,
            tab = SDL_SCANCODE_TAB,
            thousands_separator = SDL_SCANCODE_THOUSANDSSEPARATOR,
            u = SDL_SCANCODE_U,
            undo = SDL_SCANCODE_UNDO,
            unknown = SDL_SCANCODE_UNKNOWN,
            up = SDL_SCANCODE_UP,
            v = SDL_SCANCODE_V,
            volume_down = SDL_SCANCODE_VOLUMEDOWN,
            volume_up = SDL_SCANCODE_VOLUMEUP,
            w = SDL_SCANCODE_W,
            www = SDL_SCANCODE_WWW,
            x = SDL_SCANCODE_X,
            y = SDL_SCANCODE_Y,
            z = SDL_SCANCODE_Z,
            international_1 = SDL_SCANCODE_INTERNATIONAL1,
            international_2 = SDL_SCANCODE_INTERNATIONAL2,
            international_3 = SDL_SCANCODE_INTERNATIONAL3,
            international_4 = SDL_SCANCODE_INTERNATIONAL4,
            international_5 = SDL_SCANCODE_INTERNATIONAL5,
            international_6 = SDL_SCANCODE_INTERNATIONAL6,
            international_7 = SDL_SCANCODE_INTERNATIONAL7,
            international_8 = SDL_SCANCODE_INTERNATIONAL8,
            international_9 = SDL_SCANCODE_INTERNATIONAL9,
            language_1 = SDL_SCANCODE_LANG1,
            language_2 = SDL_SCANCODE_LANG2,
            language_3 = SDL_SCANCODE_LANG3,
            language_4 = SDL_SCANCODE_LANG4,
            language_5 = SDL_SCANCODE_LANG5,
            language_6 = SDL_SCANCODE_LANG6,
            language_7 = SDL_SCANCODE_LANG7,
            language_8 = SDL_SCANCODE_LANG8,
            language_9 = SDL_SCANCODE_LANG9,
            toggle_hangul_english = SDL_SCANCODE_LANG1,
            hanja_conversion = SDL_SCANCODE_LANG2,
            katakana = SDL_SCANCODE_LANG3,
            hiragana = SDL_SCANCODE_LANG4,
            zenkaku_hankaku = SDL_SCANCODE_LANG5,
            // locking_caps_lock = SDL_SCANCODE_LOCKINGCAPSLOCK,
            // locking_num_lock = SDL_SCANCODE_LOCKINGNUMLOCK,
            // locking_scroll_lock = SDL_SCANCODE_LOCKINGSCROLLLOCK
            non_us_backslash = SDL_SCANCODE_NONUSBACKSLASH,
            non_us_hash = SDL_SCANCODE_NONUSHASH
        };

        enum class Key {
            num_0 = SDLK_0,
            num_1 = SDLK_1,
            num_2 = SDLK_2,
            num_3 = SDLK_3,
            num_4 = SDLK_4,
            num_5 = SDLK_5,
            num_6 = SDLK_6,
            num_7 = SDLK_7,
            num_8 = SDLK_8,
            num_9 = SDLK_9,
            a = SDLK_a,
            ac_back = SDLK_AC_BACK,
            ac_bookmarks = SDLK_AC_BOOKMARKS,
            ac_forward = SDLK_AC_FORWARD,
            ac_home = SDLK_AC_HOME,
            ac_refresh = SDLK_AC_REFRESH,
            ac_search = SDLK_AC_SEARCH,
            ac_stop = SDLK_AC_STOP,
            again = SDLK_AGAIN,
            alt_erase = SDLK_ALTERASE,
            apostrophe = SDLK_QUOTE,
            application = SDLK_APPLICATION,
            audio_mute = SDLK_AUDIOMUTE,
            audio_next = SDLK_AUDIONEXT,
            audio_play = SDLK_AUDIOPLAY,
            audio_prev = SDLK_AUDIOPREV,
            audio_stop = SDLK_AUDIOSTOP,
            b = SDLK_b,
            backslash = SDLK_BACKSLASH,
            backspace = SDLK_BACKSPACE,
            brightness_down = SDLK_BRIGHTNESSDOWN,
            brightness_up = SDLK_BRIGHTNESSUP,
            c = SDLK_c,
            calculator = SDLK_CALCULATOR,
            cancel = SDLK_CANCEL,
            caps_lock = SDLK_CAPSLOCK,
            clear = SDLK_CLEAR,
            clear_again = SDLK_CLEARAGAIN,
            comma = SDLK_COMMA,
            computer = SDLK_COMPUTER,
            copy = SDLK_COPY,
            cr_sel = SDLK_CRSEL,
            currency_subunit = SDLK_CURRENCYSUBUNIT,
            currency_unit = SDLK_CURRENCYUNIT,
            cut = SDLK_CUT,
            d = SDLK_d,
            decimal_separator = SDLK_DECIMALSEPARATOR,
            delete_key = SDLK_DELETE,
            display_switch = SDLK_DISPLAYSWITCH,
            down = SDLK_DOWN,
            e = SDLK_e,
            eject = SDLK_EJECT,
            end = SDLK_END,
            equals = SDLK_EQUALS,
            escape = SDLK_ESCAPE,
            execute = SDLK_EXECUTE,
            ex_sel = SDLK_EXSEL,
            f = SDLK_f,
            f1 = SDLK_F1,
            f10 = SDLK_F10,
            f11 = SDLK_F11,
            f12 = SDLK_F12,
            f13 = SDLK_F13,
            f14 = SDLK_F14,
            f15 = SDLK_F15,
            f16 = SDLK_F16,
            f17 = SDLK_F17,
            f18 = SDLK_F18,
            f19 = SDLK_F19,
            f2 = SDLK_F2,
            f20 = SDLK_F20,
            f21 = SDLK_F21,
            f22 = SDLK_F22,
            f23 = SDLK_F23,
            f24 = SDLK_F24,
            f3 = SDLK_F3,
            f4 = SDLK_F4,
            f5 = SDLK_F5,
            f6 = SDLK_F6,
            f7 = SDLK_F7,
            f8 = SDLK_F8,
            f9 = SDLK_F9,
            find = SDLK_FIND,
            g = SDLK_g,
            grave = SDLK_BACKQUOTE,
            h = SDLK_h,
            help = SDLK_HELP,
            home = SDLK_HOME,
            i = SDLK_i,
            insert = SDLK_INSERT,
            j = SDLK_j,
            k = SDLK_k,
            kbd_illumination_down = SDLK_KBDILLUMDOWN,
            kbd_illumination_toggle = SDLK_KBDILLUMTOGGLE,
            kbd_illumination_up = SDLK_KBDILLUMUP,
            keypad_0 = SDLK_KP_0,
            keypad_00 = SDLK_KP_00,
            keypad_000 = SDLK_KP_000,
            keypad_1 = SDLK_KP_1,
            keypad_2 = SDLK_KP_2,
            keypad_3 = SDLK_KP_3,
            keypad_4 = SDLK_KP_4,
            keypad_5 = SDLK_KP_5,
            keypad_6 = SDLK_KP_6,
            keypad_7 = SDLK_KP_7,
            keypad_8 = SDLK_KP_8,
            keypad_9 = SDLK_KP_9,
            keypad_a = SDLK_KP_A,
            keypad_ampersand = SDLK_KP_AMPERSAND,
            keypad_at = SDLK_KP_AT,
            keypad_b = SDLK_KP_B,
            keypad_backspace = SDLK_KP_BACKSPACE,
            keypad_binary = SDLK_KP_BINARY,
            keypad_c = SDLK_KP_C,
            keypad_clear = SDLK_KP_CLEAR,
            keypad_clear_entry = SDLK_KP_CLEARENTRY,
            keypad_colon = SDLK_KP_COLON,
            keypad_comma = SDLK_KP_COMMA,
            keypad_d = SDLK_KP_D,
            keypad_double_ampersand = SDLK_KP_DBLAMPERSAND,
            keypad_double_vertical_bar = SDLK_KP_DBLVERTICALBAR,
            keypad_decimal = SDLK_KP_DECIMAL,
            keypad_divide = SDLK_KP_DIVIDE,
            keypad_e = SDLK_KP_E,
            keypad_enter = SDLK_KP_ENTER,
            keypad_equals = SDLK_KP_EQUALS,
            keypad_equals_as400 = SDLK_KP_EQUALSAS400,
            keypad_exclaimation_mark = SDLK_KP_EXCLAM,
            keypad_f = SDLK_KP_F,
            keypad_greater_than = SDLK_KP_GREATER,
            keypad_hash = SDLK_KP_HASH,
            keypad_hexadecimal = SDLK_KP_HEXADECIMAL,
            keypad_left_brace = SDLK_KP_LEFTBRACE,
            keypad_left_parenthesis = SDLK_KP_LEFTPAREN,
            keypad_lower_than = SDLK_KP_LESS,
            keypad_mem_add = SDLK_KP_MEMADD,
            keypad_mem_clear = SDLK_KP_MEMCLEAR,
            keypad_mem_divide = SDLK_KP_MEMDIVIDE,
            keypad_mem_multiply = SDLK_KP_MEMMULTIPLY,
            keypad_mem_recall = SDLK_KP_MEMRECALL,
            keypad_mem_store = SDLK_KP_MEMSTORE,
            keypad_mem_subtract = SDLK_KP_MEMSUBTRACT,
            keypad_minus = SDLK_KP_MINUS,
            keypad_multiply = SDLK_KP_MULTIPLY,
            keypad_octal = SDLK_KP_OCTAL,
            keypad_percent = SDLK_KP_PERCENT,
            keypad_period = SDLK_KP_PERIOD,
            keypad_plus = SDLK_KP_PLUS,
            keypad_plus_minus = SDLK_KP_PLUSMINUS,
            keypad_power = SDLK_KP_POWER,
            keypad_right_brace = SDLK_KP_RIGHTBRACE,
            keypad_right_parenthesis = SDLK_KP_RIGHTPAREN,
            keypad_space = SDLK_KP_SPACE,
            keypad_tab = SDLK_KP_TAB,
            keypad_vertical_bar = SDLK_KP_VERTICALBAR,
            keypad_xor = SDLK_KP_XOR,
            l = SDLK_l,
            left_alt = SDLK_LALT,
            left_ctrl = SDLK_LCTRL,
            left = SDLK_LEFT,
            left_bracket = SDLK_LEFTBRACKET,
            left_super = SDLK_LGUI,
            left_shift = SDLK_LSHIFT,
            m = SDLK_m,
            mail = SDLK_MAIL,
            media_select = SDLK_MEDIASELECT,
            menu = SDLK_MENU,
            minus = SDLK_MINUS,
            mode_switch = SDLK_MODE,
            mute = SDLK_MUTE,
            n = SDLK_n,
            numlock = SDLK_NUMLOCKCLEAR,
            o = SDLK_o,
            oper = SDLK_OPER,
            out = SDLK_OUT,
            p = SDLK_p,
            page_down = SDLK_PAGEDOWN,
            page_up = SDLK_PAGEUP,
            paste = SDLK_PASTE,
            pause = SDLK_PAUSE,
            period = SDLK_PERIOD,
            power = SDLK_POWER,
            print_screen = SDLK_PRINTSCREEN,
            prior = SDLK_PRIOR,
            q = SDLK_q,
            r = SDLK_r,
            right_alt = SDLK_RALT,
            right_ctrl = SDLK_RCTRL,
            return_enter = SDLK_RETURN,
            return_alternative = SDLK_RETURN2,
            right_super = SDLK_RGUI,
            right = SDLK_RIGHT,
            right_bracket = SDLK_RIGHTBRACKET,
            right_shift = SDLK_RSHIFT,
            s = SDLK_s,
            scroll_lock = SDLK_SCROLLLOCK,
            select = SDLK_SELECT,
            semicolon = SDLK_SEMICOLON,
            separator = SDLK_SEPARATOR,
            slash = SDLK_SLASH,
            sleep = SDLK_SLEEP,
            space = SDLK_SPACE,
            stop = SDLK_STOP,
            sys_req = SDLK_SYSREQ,
            t = SDLK_t,
            tab = SDLK_TAB,
            thousands_separator = SDLK_THOUSANDSSEPARATOR,
            u = SDLK_u,
            undo = SDLK_UNDO,
            unknown = SDLK_UNKNOWN,
            up = SDLK_UP,
            v = SDLK_v,
            volume_down = SDLK_VOLUMEDOWN,
            volume_up = SDLK_VOLUMEUP,
            w = SDLK_w,
            www = SDLK_WWW,
            x = SDLK_x,
            y = SDLK_y,
            z = SDLK_z,
            ampersand = SDLK_AMPERSAND,
            asterisk = SDLK_ASTERISK,
            at = SDLK_AT,
            caret = SDLK_CARET,
            colon = SDLK_COLON,
            dollar = SDLK_DOLLAR,
            exclaimation_mark = SDLK_EXCLAIM,
            greater_than = SDLK_GREATER,
            hash = SDLK_HASH,
            left_parenthesis = SDLK_LEFTPAREN,
            lower_than = SDLK_LESS,
            percent = SDLK_PERCENT,
            plus = SDLK_PLUS,
            question_mark = SDLK_QUESTION,
            double_quote = SDLK_QUOTEDBL,
            right_parenthesis = SDLK_RIGHTPAREN,
            underscore = SDLK_UNDERSCORE
        };

        enum class Modifier {
            left_shift = KMOD_LSHIFT,
            right_shift = KMOD_RSHIFT,
            shift = KMOD_LSHIFT | KMOD_RSHIFT,
            left_control = KMOD_LCTRL,
            right_control = KMOD_RCTRL,
            control = KMOD_LCTRL | KMOD_RCTRL,
            left_alt = KMOD_LALT,
            right_alt = KMOD_RALT,
            alt = KMOD_LALT | KMOD_RALT,
            left_super = KMOD_LGUI,
            right_super = KMOD_RGUI,
            super = KMOD_LGUI | KMOD_RGUI,
            numlock = KMOD_NUM,
            caps = KMOD_CAPS,
            mode = KMOD_MODE,
        };

        class KeyCombination {
            public:
            SDL_Keysym sdl_keysym;

            KeyCombination(const SDL_Keysym);
            KeyCombination(const Uint16 modifiers, const ScanKey);
            KeyCombination(const Uint16 modifiers, const Key);
            KeyCombination(const ScanKey);
            KeyCombination(const Key);

            bool modifier(const Modifier) const;
            void modifier(const Modifier, const bool);

            ScanKey scan_key() const;
            void scan_key(const ScanKey);

            Key key() const;
            void key(const Key);
        };
    }
}
